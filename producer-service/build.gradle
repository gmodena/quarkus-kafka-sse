plugins {
    id 'java'
    id 'io.quarkus'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-smallrye-reactive-messaging-kafka'

    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'io.quarkus:quarkus-smallrye-reactive-messaging'
    implementation 'io.quarkus:quarkus-junit5'
    implementation 'io.quarkus:quarkus-kafka-client'

    implementation 'org.apache.kafka:kafka-clients:2.8.0'
    implementation 'io.smallrye.reactive:smallrye-reactive-messaging-api'
    implementation 'io.smallrye.reactive:smallrye-reactive-messaging-kafka'
    implementation 'io.quarkus:quarkus-micrometer-registry-prometheus'
    implementation 'io.quarkiverse.loggingjson:quarkus-logging-json:3.0.0'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.quarkus:quarkus-junit5-mockito'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'org.mockito:mockito-core:3.12.4'
}

group 'io.github.gmodena'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
    options.compilerArgs << '-Xlint:deprecation'
    options.compilerArgs << '--enable-preview'
}

compileTestJava {
    options.encoding = 'UTF-8'
}
